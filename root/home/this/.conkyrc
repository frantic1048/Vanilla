conky.config = {
  out_to_x = false,
  own_window = false,
  own_window_class = 'conky',
  out_to_console = true,
  background = false,
  max_text_width = 0,
  double_buffer = true,

-- Update interval in seconds
  update_interval = 1.0,

-- This is the number of times Conky will update before quitting.
-- Set to zero to run forever.
  total_run_times = 0,

-- Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
  short_units = false,

-- How strict should if_up be when testing an interface for being up?
-- The value is one of up, link or address, to check for the interface
-- being solely up, being up and having link or being up, having link
-- and an assigned IP address.
  if_up_strictness = 'address',

-- Add spaces to keep things from moving about?  This only affects certain objects.
-- use_spacer should have an argument of left, right, or none
  use_spacer = 'left',

-- Force UTF8? note that UTF8 support required XFT
  override_utf8_locale = false,

-- number of cpu samples to average
-- set to 1 to disable averaging
  cpu_avg_samples = 2,

-- Stuff after 'TEXT' will be formatted on screen
};

conky.text = [[


# JSON for i3bar


[
# Clementine now Playing
  { "full_text" :"${if_running clementine}\
${if_empty ${exec /home/chino/bin/wclementineplaying.py -a}}\
${else}\uf30c ${exec /home/chino/bin/wclementineplaying.py -a} \uF2AC ${exec /home/chino/bin/wclementineplaying.py -t}\
${endif}\
${endif}" , "color" : "\#ffffff"},

# CPU Load, Mem info
  { "full_text" : "\uf299 Load ${cpu cup0}% \uF2AC \
Use ${mem} \uF2AC \
Cache ${cached} \uF2AC \
Buffer ${buffers} \uF2AC \
Free ${memfree}", "color" : "\#ffffff"},

# GPU Load
{ "full_text" : "\uf3a4 Load ${exec nvidia-settings -tq [gpu:0]/GPUUtilization | awk -F"," '{print(substr($1,index($1,"=")+1))}'}% \uF2AC \
#Video Engine
VE ${exec nvidia-settings -tq [gpu:0]/GPUUtilization | awk -F"," '{print(substr($3,index($3,"=")+1))}'}% \uF2AC \
# GPU Mem percent
Mem ${exec nvidia-settings -tq [gpu:0]/GPUUtilization | awk -F"," '{print(substr($2,index($2,"=")+1))}'}%", "color" : "\#ffffff"},

# Date Time
{"full_text":"\uf392 ${time %a, %d %b %Y %T %z}","color":"\#ffffff"}
],

]];
